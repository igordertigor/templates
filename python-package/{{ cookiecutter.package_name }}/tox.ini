[tox]
envlist = flake8,mypy,unit

[testenv:flake8]
deps = flake8
skipsdist = True
skip_install = True
commands = flake8 src/{{ cookiecutter.package_name }}/ tests/unit/ tests/integration/

[testenv:mypy]
deps =
    mypy
    {% if cookiecutter.use_pydantic %}pydantic{% endif %}
skipsdist = True
skip_install = True
commands = mypy src/{{ cookiecutter.package_name }}

[testenv:unit]
deps =
    pytest
    pytest-cov
commands = pytest --cov={{ cookiecutter.package_name }} --cov-report=term-missing --cov-report=html -vv tests/unit/ {posargs}


[testenv:integration]
deps =
    pytest
    pytest-cov
commands = pytest -vv tests/integration/ {posargs}

[testenv:format]
deps =
    blue
skipsdist = True
skip_install = True
commands = blue check src/{{ cookiecutter.package_name}} tests/unit tests/integration/

{% if cookiecutter.add_publish_task.lower().startswith('y') %}
[testenv:publish]
deps =
    {% if cookiecutter.commandline_entrypoint %}cram{% endif %}
    build
    twine
passenv =
    TWINE_USERNAME
    TWINE_PASSWORD
allowlist_externals = bash
commands = bash publish.sh {posargs}
{% endif %}

[flake8]
max-line-length = 90

[coverage:report]
{% if cookiecutter.coverage_threshold %}fail_under = {{ cookiecutter.coverage_threshold }}{% endif %}
exclude_lines =
    # Re-enable default
    pragma: no cover

    # Don't complate about code that can't run anyways
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod
omit =
    src/{{ cookiecutter.package_name }}/__init__.py
